#include <stdio.h>
#include <stdlib.h>

int find=0;
int fuk=0;

struct Maze
{
    int h;
    int t;
} ma[1000][1000];

int spread (int x,int y,int height)
{
    if (ma[x][y].h<=height-2)
        ma[x][y].h=height;
    else
        return 0;
    if (ma[x][y].t==3)
    {
        find=1000000-height;
        return height;
    }
    if(ma[x-1][y].t==0||ma[x-1][y].t==3)
        spread(x-1,y,height-1);
    if(ma[x+1][y].t==0||ma[x+1][y].t==3)
        spread(x+1,y,height-1);
    if(ma[x][y-1].t==0||ma[x][y-1].t==3)
        spread(x,y-1,height-1);
    if(ma[x][y+1].t==0||ma[x][y+1].t==3)
        spread(x,y+1,height-1);
    return 0;
}

int backing(int x,int y)
{
    int i;
    if (ma[x][y].t==2)
    {
        printf("The best road:\n");
        printf("(%d,%d) \n",x,y);
        fuk=1;
        return 0;
    }
    if (fuk==0)
    {
        if ((ma[x-1][y].t==2||ma[x-1][y].t==0)&&ma[x-1][y].h==ma[x][y].h+1)
            backing(x-1,y);
        if ((ma[x+1][y].t==2||ma[x+1][y].t==0)&&ma[x+1][y].h==ma[x][y].h+1)
            backing(x+1,y);
        if ((ma[x][y-1].t==2||ma[x][y-1].t==0)&&ma[x][y-1].h==ma[x][y].h+1)
            backing(x,y-1);
        if ((ma[x][y+1].t==2||ma[x][y+1].t==0)&&ma[x][y+1].h==ma[x][y].h+1)
            backing(x,y+1);
        printf("(%d,%d) \n",x,y);
        return 0;
    }
}

int main()
{
    int i,j,k,l,flag,m,n,x1,y1,x2,y2;
    for (i=0; i<1000; i++)
    {
        for (j=0; j<1000; j++)
        {
            ma[i][j].t=-1;
            ma[i][j].h=0;
        }
    }
    printf("Please input the maze:\n");
    for (i=1;; i++)
    {
        for (j=1;; j++)
        {
            scanf("%d",&ma[i][j].t);
            if(ma[i][j].t==-1)
                goto inputover;
            if (getchar()=='\n')
                break;

        }
    }
inputover :
    n=i;
    m=j-1;

    for (i=0; i<1000; i++)
    {
        for (j=0; j<1000; j++)
        {
            if(ma[i][j].t==2)
            {
                x1=i;
                y1=j;
            }
            if(ma[i][j].t==3)
            {
                x2=i;
                y2=j;
            }
        }
    }
    spread(x1,y1,1000000);
    printf("step:%d\n",find);
    backing(x2,y2);


}